version: "3"

tasks:
  default:
    - task: format
    - task: lint
    - task: fix
    - task: spell-check

  run:
    cmd: bash ./run.sh

  stop:
    ignore_error: true
    cmds:
      - kill $(cat .pid)
      - rm .pid

  lint:
    vars:
      paths: "{{if .CLI_ARGS}}{{.CLI_ARGS}}{{else}}src/ tools/{{end}}"
    cmds:
      - uv run ruff check --respect-gitignore {{.paths}}
      - uv run pylint -f colorized {{.paths}}
      - uv run pyright {{.paths}}

  format:
    ignore_error: true
    cmd: uv run ruff format --respect-gitignore src tools

  fix:
    cmd: uv run ruff check --respect-gitignore --fix src tools

  spell-check:
    vars:
      paths: "{{if .CLI_ARGS}}{{.CLI_ARGS}}{{else}}.{{end}}"
    cmd: cspell lint {{.paths}}

  dev-install:
    cmds:
      - uv venv
      - uv sync --group dev
      - npm install -g cspell @cspell/dict-ru_ru
      - cspell link add @cspell/dict-ru_ru

  dev-setup:
    deps:
      - dev-install
      - create-config
    cmds:
      - uv run pre-commit install

  clean:
    cmds:
      - find . -type d -name "__pycache__" -exec rm -rf {} +
      - rm -rf nohup.out .pid site .*_cache release_body.md *.log

  create-config:
    ignore_error: true
    cmd: python3 tools/create_config.py

  docs-setup:
    cmds:
      - uv venv
      - uv sync --group docs

  release:
    cmd: python3 tools/release.py {{.CLI_ARGS}}

  scan-comments:
    cmd: rg -I -n -H -e "# TODO" -e "# FIXME" -e "# NOTE" --glob "!Taskfile.yml" --ignore-file .gitignore || true

  dev-run:
    cmd: watchfiles "python3 src/livebot/main.py --debug --no-interactive" src

  install:
    cmds:
      - ./install.sh
